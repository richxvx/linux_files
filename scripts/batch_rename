#!/bin/bash


border="##################################################################"


################### HELP INFO ########################

help(){

	script_name="./$(eval basename '$0')"

	echo -e "$border\n"

	echo -e " A simple script to rename multiple files. I use this script 
 to rename my photographs: \n\n"

	echo -e " Usage: $script_name new-file-name- \n\n\n\n"
	echo -e " [*] Example: $script_name Beachday-2024- \n"
	echo -e " Result: old-file-name.png > Beachday-2024-1.png"
	echo -e "\t old-file-name.png > Beachday-2024-2.png \n\n"
	#######
	echo -e "\n$border\n"
	echo -e " Optional: \n"
	echo -e " -n: Shows you the output without altering file names \n\n\n\n"

}
######################################################

new_name=$1

# Checks for the first argument
if [ -z $new_name ]; then
	clear
	echo -e "\n[!] no argument was given \n"

	help
	exit
fi




# Prints a message if the directory is empty
if [[ -z $(dir) ]]; then
	echo -e "\n[!] This directory is empty...\n\n"
	exit
fi


#===================================================


# removes whitespace from all files in current directory
rename 's/ //g' *


rename() {

	# Renames every file with a new file name
	# While appending a number to the file name

	let count=1

	for file in $(ls $dir); do

		if [ ! -d "$file" ]; then
			mv -f $file ${new_name%%.*}$count.${file##*.}
			let count=count+1
		fi
	done

}


# ================================================



# new variable for test_run function
other_name=$2


# Allows the user to run a test to see
# what the output will look like
# without altering the file names

test_run() {

	let count=1

	echo ""

	for file in $(ls $dir); do

		if [ ! -d $file ]; then
			echo -e "$file > ${other_name%%.*}$count.${file##*.}"
			echo -e "$thin_border"
			let count=count+1
		fi
	done

	echo -e "\n"


}





optstring=":hn:"

while getopts ${optstring} arg; do
	case ${arg} in
		h)
			clear
			help
			;;
		n)
			test_run
			exit
			;;
		:)
			echo -e "\n[!] Error: -${OPTARG} requires an argument.\n\n"
			exit
			;;
		?)
			clear
			echo -e "\n[!] Invalid option: -${OPTARG}\n"
			help
			exit
			;;
	esac

done


rename

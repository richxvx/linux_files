#!/bin/bash

border="========================================="
thin_border="------------------------------------------------"


script_name="$(eval basename $0)"

if [ -z $1 ]; then
	clear

	echo -e "\n [!] $script_name needs an option \n"
	echo -e "$thin_border \n
 -a : Creates a system snapshot and upgrades the system
 -u : Update system
 -b : Creates a snapshot \n\n"

	exit

fi

check_root() {

	if [ "$EUID" != 0 ]; then
		echo -e "\n [!] Run as root \n\n"
		exit
	fi

}

backup() {

	echo -e "\n\n$border"
	echo -e "\t Creating Snapshot..."
	echo -e "$border \n\n"
	sudo timeshift --create --comment "$comment"

}



update() {

	echo -e "\n\n$border"
	echo -e "\t Updating..."
	echo -e "$border \n\n"

	sudo apt update && sudo apt upgrade -y
	/bin/check_reboot
}



optstring=":abu"

while getopts ${optstring} option; do
	case ${option} in
		a)
			clear
			check_root
			comment="Snapshot and Update"
			backup
			update
			;;
		b)
			clear
			read -p "[*] Snapshot Comment: " comment
			echo ""
			backup
			;;
		u)
			clear
			update
			;;
		:)
			echo -e "\n [!] Error: -${OPTARG} requires an argument \n"
			echo -e " Ex: $script_name -${OPTARG} [File] \n\n"
			exit
			;;
		?)
			echo -e "\n [!] Invalid option: - ${OPTARG} \n\n"
			;;

	esac

done

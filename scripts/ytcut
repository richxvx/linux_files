#!/bin/bash

border="================================================="
thin_border="------------------------------------------------"


# ============================================
# Information about the script


script_name="$(eval basename $0)"


help() {

	echo -e "$border"

	echo -e "\n Usage: $script_name -i [URL] -s [Start_of_clip] -e [End_of_clip] \n
 -i: Youtube URL
 -s: Start of video clip (07:10)
 -e: End of clip

$thin_border

 OPTIONAL: \n
 -o: Output name \n\n"


}
# =============================================



if [ -z $1 ]; then

	clear

	echo -e "\n [!] Error: no options were given"
	help
	exit

fi



optstring=":i:o:s:e:"

while getopts ${optstring} option; do
	case ${option} in
		i)
			url="${OPTARG}"
			;;
		s)
			start_of_clip="${OPTARG}"
			;;
		e)
			end_of_clip="${OPTARG}"
			;;
		o)
			vid_name="${OPTARG}"
			;;
		:)
			echo -e "\n [!] Error: -${OPTARG} requires an argument \n\n"
			exit
			;;
		?)
			echo -e "\n[!] Invalid option: -${OPTARG} \n"
			exit
			;;
	esac

done




if [[ -z $url || -z $start_of_clip || -z $end_of_clip ]]; then

	clear
	echo -e "\n [!] Error: $script_name needs 3 options: -i, -s, -e"

	help
	exit


elif [ -z "$vid_name" ]; then

	ffmpeg -ss $start_of_clip -to $end_of_clip -i "$(youtube-dl -f best -g $url)" output.mp4

else

	ffmpeg -ss $start_of_clip -to $end_of_clip -i "$(youtube-dl -f best -g $url)" $vid_name

fi

